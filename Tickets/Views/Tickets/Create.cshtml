@model Tickets.ViewModels.Create

@{
    ViewBag.Title = "Create";
}


<br />
<div class="panel">
    <div class="panel-heading">
        <h1 class="panel-title" style="font-size: 30px;">
            Create Ticket
        </h1>
    </div>
    <hr />
    <div class="panel-body">
            @using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data", id = "office-form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Site, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Site, new SelectList(Model.school.Select(x => x.Site), "Site"),
                                        new { @class = "form-control", id = "SelectedSite" })
                            @Html.ValidationMessageFor(model => model.Site, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div id="Staff">
                                <select id="SelectASchool" class="form-control">
                                    <option value="">Select a Staff Member</option>
                                </select>

                            </div>
                            @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div id="Room">
                                <select id="SelectASchool" class="form-control">
                                    <option value="">Select a Room</option>
                                </select>

                            </div>
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Equipment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Equipment, new SelectList(Model.createequipment.Select(x => x.Equipment), "Equipment"),
                                        "Select Equipment",
                                        new { @class = "form-control", id = "EquipmentValue" })
                            @Html.ValidationMessageFor(model => model.Equipment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nutrition, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Nutrition)
                                @Html.ValidationMessageFor(model => model.Nutrition, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Attachments", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 pull-left">
                            <input type="file" name="file" Multiple="Multiple" id="file" class="btn btn-default form-control" />
                            <br />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Issue, 10, 120, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                            @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" id="submit" />
                        </div>
                    </div>
                </div>

            }

                </div>
            </div>





            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <script>
        $(document).ready(function () {
            var selectedSite = $("#SelectedSite").val();
            $.ajax({
                type: 'Get',
                url: '@Url.Action("_getTeachers","Tickets")',
                data: { selectedSite: selectedSite },
                success: function (data) {
                    $("#Staff").html(data);
                },
                error: function (data) {
                    $(".errormessage").text('There was an error processing your request.');
                }
            });
            if (selectedSite == "District Office" || selectedSite == "DOE")
            {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("_getDO","Tickets")',
                    data: {  },
                    success: function (data) {
                        $("#Room").html(data);
                    },
                    error: function (data) {
                        $(".errormessage").text('There was an error processing your request.');
                    }
                });
            }
            else
            {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("_getRoom","Tickets")',
                    data: { selectedSite: selectedSite },
                    success: function (data) {
                        $("#Room").html(data);
                    },
                    error: function (data) {
                        $(".errormessage").text('There was an error processing your request.');
                    }
                });
            }

        });
        $("#SelectedSite").on('change', function () {
            var selectedSite = $(this).val();
            $.ajax({
                type: 'Get',
                url: '@Url.Action("_getTeachers","Tickets")',
                data: { selectedSite: selectedSite },
                success: function (data) {
                    $("#Staff").html(data);
                },
                error: function (data) {
                    $(".errormessage").text('There was an error processing your request.');
                }
            });
            if (selectedSite == "District Office" || selectedSite == "DOE")
            {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("_getDO","Tickets")',
                    data: {},
                    success: function (data) {
                        $("#Room").html(data);

                    },
                    error: function (data) {
                        $(".errormessage").text('There was an error processing your request.');
                    }
                });
            }
            else
            {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("_getRoom","Tickets")',
                    data: { selectedSite: selectedSite},
                    success: function (data) {
                        $("#Room").html(data);

                    },
                    error: function (data) {
                        $(".errormessage").text('There was an error processing your request.');
                    }
                });
            }

        });

        $("#Staff").on('change', function () {
            var selectedSite = $("#SelectedSite").val();
            var badge = $("#StaffValue").val();
            if (selectedSite == "District Office" || selectedSite == "DOE")
            {

            }
            else
            {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("_getRoom","Tickets")',
                    data: { selectedbadge: badge },
                    success: function (data) {
                        $("#Room").html(data);

                    },
                    error: function (data) {
                        $(".errormessage").text('There was an error processing your request.');
                    }
                });
            }

        });




        $(function () {
            var selectedSite = $('#SelectedSite').val();
            var badge = $('#StaffValue').val();
            var location = $('#RoomValue').val();
            var elem = document.getElementById('Nutrition').checked;
            if (elem == 1)
                var nutrition = true;
            else
                var nutrition = false;
            var equipment = $('#EquipmentValue').val();
            var issue = $('#Issue').val();

                    //$('#submit').on('click', function () {
                    //    var selectedSite = $('#SelectedSite').val();
                    //    var badge = $('#StaffValue').val();
                    //    var location = $('#RoomValue').val();
                    //    var elem = document.getElementById('Nutrition').checked;
                    //    if (elem == 1)
                    //        var nutrition = true;
                    //    else
                    //        var nutrition = false;
                    //    var equipment = $('#EquipmentValue').val();
                    //    var issue = $('#Issue').val();
                    //    $.ajax({
                    //        type: 'Post',
                    //        url: '/api/Tickets',
                    //        data: { Site: selectedSite, BadgeNumber: badge, Location: location, Nutrition: nutrition, Equipment: equipment, Issue: issue },
                    //        success: function (data) {

                    //        },
                    //        error: function (data) {
                    //            $(".errormessage").text('There was an error processing your request.');
                    //        },
                    //        complete: function () {
                    //            // make sure that you are no longer handling the submit event; clear handler
                    //            this.off('submit');
                    //            // actually submit the form
                    //            this.submit();
                    //        }
                    //    });
                    //});
        });
                </script>
            }