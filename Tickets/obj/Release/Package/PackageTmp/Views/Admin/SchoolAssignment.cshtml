@model Tickets.ViewModels.Assignments

@{
    ViewBag.Title = "Create";
}


<br />

<div class="panel">
    <div class="panel-heading">
        <h1 class="panel-title" style="font-size: 30px;">
            @Model.School
        </h1>
    </div>
    <hr />
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.School)
                <div class="col-xs-12 col-sm-12 form-group">
                    @Html.Label("Assigned Tech", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TechID, new SelectList(Model.schooltech, "TechId", "TechName"),
                                        "Select a Tech",
                                        new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.TechID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Monday", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Monday)
                            @Html.ValidationMessageFor(model => model.Monday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Tuesday", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Tuesday)
                            @Html.ValidationMessageFor(model => model.Tuesday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Wednesday", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Wednesday)
                            @Html.ValidationMessageFor(model => model.Wednesday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Thursday", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Thursday)
                            @Html.ValidationMessageFor(model => model.Thursday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Friday", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Friday)
                            @Html.ValidationMessageFor(model => model.Friday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $("#SelectedSite").on('change', function () {
        var selectedSite = $(this).val();
            $.ajax({
                type: 'Get',
                url: '@Url.Action("_getTeachers","Tickets")',
                data: { selectedSite: selectedSite },
                success: function (data) {
                    $("#Staff").html(data);
                },
                error: function (data) {
                    $(".errormessage").text('There was an error processing your request.');
                }
            });

    });

    $("#Staff").on('change', function () {
        var badge = $("#StaffValue").val();
        $.ajax({
            type: 'Get',
            url: '@Url.Action("_getRoom","Tickets")',
            data: { selectedbadge: badge },
            success: function (data) {
                $("#Room").html(data);
            },
            error: function (data) {
                $(".errormessage").text('There was an error processing your request.');
            }
        });
    });
    </script>
}
