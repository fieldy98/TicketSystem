@model TicketSystem.ViewModels.EditUser

@{
    ViewBag.Title = "Create";
}




<br />
<div class="panel">
    <div class="panel-heading">
        <h1 class="panel-title" style="font-size: 30px;">
            @Model.LastName, @Model.FirstName
        </h1>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-xs-12 col-sm-12 form-group">
                    @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 form-group">
                    @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 form-group">
                    @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 checkbox form-group">
                    @Html.Label("Admin", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsAdmin, new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 checkbox form-group">
                    @Html.Label("Deactivate", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsActive, new { @class = "form-control", id = "StaffValue" })

                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="btn-group">
                            <input type="button" class="btn btn-default" value="Change Password" onclick="location.href='@Url.Action("ChangePassword", "Authentication", new { ID = Model.ID})'" />
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $("#SelectedSite").on('change', function () {
        var selectedSite = $(this).val();
            $.ajax({
                type: 'Get',
                url: '@Url.Action("_getTeachers","Tickets")',
                data: { selectedSite: selectedSite },
                success: function (data) {
                    $("#Staff").html(data);
                },
                error: function (data) {
                    $(".errormessage").text('There was an error processing your request.');
                }
            });

    });

    $("#Staff").on('change', function () {
        var badge = $("#StaffValue").val();
        $.ajax({
            type: 'Get',
            url: '@Url.Action("_getRoom","Tickets")',
            data: { selectedbadge: badge },
            success: function (data) {
                $("#Room").html(data);
            },
            error: function (data) {
                $(".errormessage").text('There was an error processing your request.');
            }
        });
    });
    </script>
}
