@model TicketSystem.ViewModels.TicketsCreateViewModel

@{
    ViewBag.Title = "Edit";
}


<br />
@using (Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="panel">
            <div class="panel-heading panel-default">
                <h1 class="panel-title" style="font-size: 30px;">Ticket #@Model.TicketNumber</h1>
                
            </div>
            <hr />
            <div class="panel-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TicketNumber)
                <div class="row">
                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.Site, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-10">
                            @Html.DropDownListFor(model => model.Site, new SelectList(Model.school.Select(x => x.Site), "Site"),
                                        "Select a Site",
                                        new { @class = "form-control", id = "SelectedSite" })
                            @Html.ValidationMessageFor(model => model.Site, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.Equipment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Equipment, new SelectList(Model.createequipment.Select(x => x.Equipment), "Equipment"),
                                        "Select Equipment",
                                        new { @class = "form-control", id = "SelectedSite" })
                            @Html.ValidationMessageFor(model => model.Equipment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.CloseTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CloseTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CloseTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.Tech, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Tech, new SelectList(Model.assignedtech, "TechId", "TechName"),
                                        "Select a Tech",
                                        new { @class = "form-control"})

                            @Html.ValidationMessageFor(model => model.Tech, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.LabelFor(model => model.Nutrition, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Nutrition)
                                @Html.ValidationMessageFor(model => model.Nutrition, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    @if (Model.CloseTime == null)
                {
                        <div class="col-xs-12 col-sm-6 form-group">
                            @Html.LabelFor(model => model.CloseTicket, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.CloseTicket)
                                    @Html.ValidationMessageFor(model => model.CloseTicket, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-12 col-sm-6 form-group">
                            @Html.LabelFor(model => model.OpenTicket, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.OpenTicket)
                                    @Html.ValidationMessageFor(model => model.OpenTicket, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }

                    <div class="col-xs-12 col-sm-6 form-group">

                        @Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })


                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 form-group">
                        @Html.Label("Attachments", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="file" id="file" Multiple="Multiple" class="form-control" /><br />
                            @foreach (var item in Model.downloadfiles)
                            {

                                <a href="@item.FileLocation" target="_blank">@item.Name</a><br />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        


        <div class="panel">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="col-xs-12 col-sm-6 form-group">

                            @Html.Label("Add Comment", htmlAttributes: new { @class = "control-label col-md-2" })


                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.NewComments, 10, 120, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                                @Html.ValidationMessageFor(model => model.NewComments, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div class="col-sm-offset-6 col-xs-10">
                                    <input type="submit" value="Modify" class="btn btn-default" />
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-6 form-group">

                            @Html.Label("Comments", htmlAttributes: new { @class = "control-label col-md-2" })


                            <div class="col-md-10">


                                @foreach (var item in Model.createcomments)
                                {
                                    if (item.TimeStamp != null)
                                    {
                                        <div class="panel">
                                            <div class="panel-heading" style="background-color:darkgray;">
                                                @if (@item.Tech != null)
                                                {
                                                    <h3 class="panel-title" style="color:white;">
                                                        @item.TimeStamp - @item.Tech
                                                    </h3>
                                                }
                                                else
                                                {
                                                    <h3 class="panel-title" style="color:white;">
                                                        @item.TimeStamp
                                                    </h3>
                                                }
                                            </div>
                                            <div class="panel-body">
                                                @item.NewComment
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            @item.NewComment
                                        </div>
                                    }


                                }






                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
